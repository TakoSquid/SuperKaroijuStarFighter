         w __deregister_frame_info
         w __gnu_Unwind_Find_exidx
         w __register_frame_info
         w _ITM_deregisterTMCloneTable
         w _ITM_registerTMCloneTable
00000000 b .LANCHOR4
00000000 00000401 b __fixedpath
00000000 b _TLS_MODULE_BASE_
00000000 a shift
00000000 a shift
00000404 b .LANCHOR5
00000404 00000802 b __utf16path
00000c08 b .LANCHOR6
00000c08 00000802 b __utf16path_old.8638
00100000 A __start__
00100000 T _start
00100008 T __service_ptr
0010000c T __apt_appid
00100010 T __heap_size
00100014 T __linear_heap_size
00100018 T __system_arglist
0010001c T __system_runflags
00100020 t startup
00100058 t ClearMem
0010006c t ClrLoop
00100094 T _init
001000ac T initSystem
001000f0 T __ctru_exit
00100110 t .udivsi3_skip_div0_test
00100110 T __aeabi_uidiv
00100110 000001ec T __udivsi3
001002fc 00000020 T __aeabi_uidivmod
0010031c T __aeabi_idiv
0010031c 00000220 T __divsi3
00100324 t .divsi3_skip_div0_test
0010053c 00000020 T __aeabi_idivmod
0010055c 00000004 W __aeabi_idiv0
0010055c 00000004 W __aeabi_ldiv0
00100560 T __aeabi_drsub
00100568 000002b0 T __aeabi_dsub
00100568 000002b0 T __subdf3
0010056c 000002ac T __adddf3
0010056c 000002ac T __aeabi_dadd
00100818 00000024 T __aeabi_ui2d
00100818 00000024 T __floatunsidf
0010083c 00000028 T __aeabi_i2d
0010083c 00000028 T __floatsidf
00100864 00000048 T __aeabi_f2d
00100864 00000048 T __extendsfdf2
001008ac 00000074 T __aeabi_ul2d
001008ac 00000074 T __floatundidf
001008c0 00000060 T __aeabi_l2d
001008c0 00000060 T __floatdidf
00100920 T __aeabi_uldivmod
0010095c 00000014 T __restore_core_regs
0010095c 00000014 T restore_core_regs
00100970 T __gnu_Unwind_Restore_VFP
00100978 T __gnu_Unwind_Save_VFP
00100980 T __gnu_Unwind_Restore_VFP_D
00100988 T __gnu_Unwind_Save_VFP_D
00100990 T __gnu_Unwind_Restore_VFP_D_16_to_31
00100998 T __gnu_Unwind_Save_VFP_D_16_to_31
001009a0 T __gnu_Unwind_Restore_WMMXD
001009e4 T __gnu_Unwind_Save_WMMXD
00100a28 T __gnu_Unwind_Restore_WMMXC
00100a3c T __gnu_Unwind_Save_WMMXC
00100a50 00000024 T ___Unwind_RaiseException
00100a50 00000024 T _Unwind_RaiseException
00100a74 00000024 T ___Unwind_Resume
00100a74 00000024 T _Unwind_Resume
00100a98 00000024 T ___Unwind_Resume_or_Rethrow
00100a98 00000024 T _Unwind_Resume_or_Rethrow
00100abc 00000024 T ___Unwind_ForcedUnwind
00100abc 00000024 T _Unwind_ForcedUnwind
00100ae0 00000024 T ___Unwind_Backtrace
00100ae0 00000024 T _Unwind_Backtrace
00100b28 00000390 T strcmp
00100eb0 t deregister_tm_clones
00100edc t register_tm_clones
00100f14 t __do_global_dtors_aux
00100f58 t frame_dummy
00100f8c 00000004 W squid::Scene::OnActivate()
00100f90 00000004 W squid::Scene::OnDeactivate()
00100f94 00000004 W squid::Scene::LateUpdate(float)
00100f98 00000004 T squid::SceneGame::ProcessInput()
00100f98 00000004 T squid::SceneGame::OnCreate()
00100f98 00000004 T squid::SceneGame::OnDestroy()
00100f9c 000000dc T squid::SceneGame::Update(float)
00101078 00000010 T squid::SceneGame::Draw(squid::Window&)
00101088 000000b4 T squid::SceneGame::SceneGame()
00101088 000000b4 T squid::SceneGame::SceneGame()
0010113c 00000004 W std::_Sp_counted_ptr<decltype(nullptr), (__gnu_cxx::_Lock_policy)0>::_M_dispose()
00101140 0000000c W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>::_M_destroy()
0010114c 000001e8 T main
00101334 00000004 W squid::Scene::ProcessInput()
00101338 0000000c T squid::SplashScene::OnActivate()
00101344 00000004 T squid::SplashScene::OnDestroy()
00101348 00000010 T squid::SplashScene::OnCreate()
00101358 00000010 T squid::SplashScene::Draw(squid::Window&)
00101368 00000028 T squid::SplashScene::Update(float)
00101390 000000e0 T squid::SplashScene::SplashScene(squid::SceneStateMachine&, squid::Window&)
00101390 000000e0 T squid::SplashScene::SplashScene(squid::SceneStateMachine&, squid::Window&)
00101470 00000008 T squid::SplashScene::SetSwitchToScene(unsigned int)
00101478 00000004 W std::_Sp_counted_ptr_inplace<squid::SceneGame, std::allocator<squid::SceneGame>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
00101478 00000004 W std::_Sp_counted_ptr_inplace<squid::SceneGame, std::allocator<squid::SceneGame>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
0010147c 00000004 W std::_Sp_counted_ptr_inplace<squid::SplashScene, std::allocator<squid::SplashScene>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
0010147c 00000004 W std::_Sp_counted_ptr_inplace<squid::SplashScene, std::allocator<squid::SplashScene>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
00101480 00000030 W std::_Sp_counted_ptr_inplace<squid::SplashScene, std::allocator<squid::SplashScene>, (__gnu_cxx::_Lock_policy)0>::_M_get_deleter(std::type_info const&)
001014b0 00000030 W std::_Sp_counted_ptr_inplace<squid::SceneGame, std::allocator<squid::SceneGame>, (__gnu_cxx::_Lock_policy)0>::_M_get_deleter(std::type_info const&)
001014e0 00000004 W std::_Sp_counted_ptr_inplace<squid::SceneGame, std::allocator<squid::SceneGame>, (__gnu_cxx::_Lock_policy)0>::_M_destroy()
001014e4 00000030 W std::_Sp_counted_ptr_inplace<squid::SceneGame, std::allocator<squid::SceneGame>, (__gnu_cxx::_Lock_policy)0>::_M_dispose()
00101514 00000004 W std::_Sp_counted_ptr_inplace<squid::SplashScene, std::allocator<squid::SplashScene>, (__gnu_cxx::_Lock_policy)0>::_M_destroy()
00101518 00000030 W std::_Sp_counted_ptr_inplace<squid::SplashScene, std::allocator<squid::SplashScene>, (__gnu_cxx::_Lock_policy)0>::_M_dispose()
00101548 00000018 W std::_Sp_counted_ptr_inplace<squid::SplashScene, std::allocator<squid::SplashScene>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
00101560 00000018 W std::_Sp_counted_ptr_inplace<squid::SceneGame, std::allocator<squid::SceneGame>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
00101578 0000028c T squid::Game::Game()
00101578 0000028c T squid::Game::Game()
00101804 00000050 T squid::Game::Update()
00101854 00000010 T squid::Game::LateUpdate()
00101864 00000030 T squid::Game::Draw()
00101894 00000004 T squid::Game::IsRunning()
00101898 00000030 T squid::Game::CalculateDeltaTime()
001018c8 00000004 W squid::Scene::Update(float)
001018cc 00000004 W squid::Scene::Draw(squid::Window&)
001018d0 00000040 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, std::shared_ptr<squid::Scene> >, false> > >::_M_allocate_buckets(unsigned int) [clone .isra.0]
00101910 00000080 T squid::SceneStateMachine::SceneStateMachine()
00101910 00000080 T squid::SceneStateMachine::SceneStateMachine()
00101990 00000028 T squid::SceneStateMachine::Update(float)
001019b8 00000028 T squid::SceneStateMachine::LateUpdate(float)
001019e0 00000028 T squid::SceneStateMachine::Draw(squid::Window&)
00101a08 0000018c T squid::SceneStateMachine::SwitchTo(unsigned int)
00101b94 000001a0 W std::_Hashtable<unsigned int, std::pair<unsigned int const, std::shared_ptr<squid::Scene> >, std::allocator<std::pair<unsigned int const, std::shared_ptr<squid::Scene> > >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<unsigned int const, std::shared_ptr<squid::Scene> >, false>*, unsigned int)
00101d34 000001a4 T squid::SceneStateMachine::Add(std::shared_ptr<squid::Scene>)
00101ed8 0000003c T squid::Window::Window(bool)
00101ed8 0000003c T squid::Window::Window(bool)
00101f14 00000004 T squid::Window::Update()
00101f18 00000004 T squid::Window::BeginDraw()
00101f1c 0000000c T squid::Window::Draw(m3d::Drawable&)
00101f28 00000008 T squid::Window::EndDraw()
00101f30 000000a8 T m3d::Applet::Applet()
00101f30 000000a8 T m3d::Applet::Applet()
00101fd8 00000054 T m3d::Applet::~Applet()
00101fd8 00000054 T m3d::Applet::~Applet()
0010202c 00000034 T m3d::Applet::isRunning()
00102060 0000000c T m3d::Applet::exit()
0010206c 00000020 t std::_Function_handler<void (m3d::Parameter), m3d::Clock::~Clock()::{lambda(m3d::Parameter)#1}>::_M_invoke(std::_Any_data const&, m3d::Parameter&&)
0010208c 00000010 t std::_Function_base::_Base_manager<m3d::Clock::~Clock()::{lambda(m3d::Parameter)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<m3d::Clock::~Clock()::{lambda(m3d::Parameter)#1}> const&, std::_Manager_operation)
0010209c 0000005c W std::_Function_handler<void (m3d::Parameter), std::_Bind<void (m3d::Clock::*(m3d::Clock*, std::_Placeholder<1>))(m3d::Parameter)> >::_M_invoke(std::_Any_data const&, m3d::Parameter&&)
001020f8 00000004 W m3d::Parameter::data<decltype(nullptr)>::~data()
001020f8 00000004 W m3d::Parameter::data<decltype(nullptr)>::~data()
001020fc 00000018 W m3d::Parameter::data<decltype(nullptr)>::is(unsigned int) const
00102114 00000004 W m3d::Parameter::type<decltype(nullptr)>::id()
00102118 00000024 W m3d::Parameter::data<decltype(nullptr)>::copy() const
0010213c 00000014 W m3d::Parameter::data<decltype(nullptr)>::~data()
00102150 00000074 W std::_Function_base::_Base_manager<std::_Bind<void (m3d::Clock::*(m3d::Clock*, std::_Placeholder<1>))(m3d::Parameter)> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
001021c4 00000030 T m3d::Clock::Clock()
001021c4 00000030 T m3d::Clock::Clock()
001021f4 00000034 T m3d::Clock::pause()
00102228 00000008 T m3d::Clock::getTime()
00102230 00000054 W std::function<void (m3d::Parameter)>::function<std::_Bind<void (m3d::Clock::*(m3d::Clock*, std::_Placeholder<1>))(m3d::Parameter)>, void, void>(std::_Bind<void (m3d::Clock::*(m3d::Clock*, std::_Placeholder<1>))(m3d::Parameter)>)
00102230 00000054 W std::function<void (m3d::Parameter)>::function<std::_Bind<void (m3d::Clock::*(m3d::Clock*, std::_Placeholder<1>))(m3d::Parameter)>, void, void>(std::_Bind<void (m3d::Clock::*(m3d::Clock*, std::_Placeholder<1>))(m3d::Parameter)>)
00102284 000000f4 T m3d::Clock::start()
00102378 000000e8 T m3d::Clock::~Clock()
00102378 000000e8 T m3d::Clock::~Clock()
00102460 00000038 T m3d::Clock::reset()
00102498 00000114 T m3d::Clock::runningThread(m3d::Parameter)
001025ac 00000090 T m3d::LEDPattern::stop()
0010263c 00000030 T m3d::Lock::~Lock()
0010263c 00000030 T m3d::Lock::~Lock()
0010266c 00000038 T m3d::Lock::~Lock()
001026a4 00000030 T m3d::Lock::Lock(m3d::Mutex&)
001026a4 00000030 T m3d::Lock::Lock(m3d::Mutex&)
001026d4 00000014 T m3d::Mutex::Mutex()
001026d4 00000014 T m3d::Mutex::Mutex()
001026e8 00000014 T m3d::Mutex::~Mutex()
001026e8 00000014 T m3d::Mutex::~Mutex()
001026fc 00000004 T m3d::Mutex::lock()
00102700 00000004 T m3d::Mutex::unlock()
00102704 000000f8 T m3d::Thread::threadFunction(void*)
001027fc 00000020 T m3d::Thread::Thread()
001027fc 00000020 T m3d::Thread::Thread()
0010281c 00000078 T m3d::Thread::start(bool)
00102894 00000108 T m3d::Thread::initialize(std::function<void (m3d::Parameter)>, m3d::Parameter, bool, bool, unsigned long long)
0010299c 00000044 T m3d::Thread::join(unsigned long long)
001029e0 00000074 T m3d::Thread::~Thread()
001029e0 00000074 T m3d::Thread::~Thread()
00102a54 0000001c T m3d::Thread::~Thread()
00102a70 0000000c T m3d::Thread::sleep()
00102a7c 00000018 T m3d::Time::Time()
00102a7c 00000018 T m3d::Time::Time()
00102a94 00000034 T m3d::Time::setTime(m3d::Time&)
00102ac8 00000028 T m3d::Time::getAsSeconds()
00102af0 00000018 T m3d::Time::getAsMilliseconds()
00102b08 0000000c T m3d::Time::getTimestamp()
00102b14 00000024 T m3d::Time::operator=(unsigned long long)
00102b38 00000034 T m3d::Time::operator+=(unsigned long long)
00102b6c 00000034 T m3d::Time::operator-=(unsigned long long)
00102ba0 0000001c T m3d::Color::Color(unsigned char, unsigned char, unsigned char)
00102ba0 0000001c T m3d::Color::Color(unsigned char, unsigned char, unsigned char)
00102bbc 0000001c T m3d::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
00102bbc 0000001c T m3d::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
00102bd8 00000008 T m3d::Color::getRed()
00102be0 00000008 T m3d::Color::getGreen()
00102be8 00000008 T m3d::Color::getBlue()
00102bf0 00000008 T m3d::Color::getRgba8()
00102bf8 0000001c T m3d::Color::getRgb8()
00102c14 00000008 t std::_Function_handler<bool (), m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
00102c1c 00000064 t std::_Function_base::_Base_manager<m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#1}> const&, std::_Manager_operation)
00102c80 00000064 t std::_Function_base::_Base_manager<m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#2}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#2}> const&, std::_Manager_operation)
00102ce4 00000064 t std::_Function_base::_Base_manager<m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#3}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#3}> const&, std::_Manager_operation)
00102d48 00000064 t std::_Function_base::_Base_manager<m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#4}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#4}> const&, std::_Manager_operation)
00102dac 00000060 t m3d::Screen::prepareFog(m3d::RenderContext::ScreenTarget) [clone .part.0]
00102e0c 00000008 t std::_Function_handler<bool (), m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#2}>::_M_invoke(std::_Any_data const&)
00102e14 00000008 t std::_Function_handler<bool (), m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#3}>::_M_invoke(std::_Any_data const&)
00102e1c 00000008 t std::_Function_handler<bool (), m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)::{lambda()#4}>::_M_invoke(std::_Any_data const&)
00102e24 00000014 T m3d::Screen::setClearColor(m3d::Color)
00102e38 00000074 T m3d::Screen::clear()
00102eac 000003c8 T m3d::Screen::Screen(bool)
00102eac 000003c8 T m3d::Screen::Screen(bool)
00103274 000000cc T m3d::Screen::prepare()
00103340 0000006c T m3d::Screen::prepareFog(m3d::RenderContext::ScreenTarget)
001033ac 00000084 W std::_Rb_tree<int, std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > >, std::_Select1st<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > >, std::less<int>, std::allocator<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > >*)
00103430 00000084 T m3d::Screen::~Screen()
00103430 00000084 T m3d::Screen::~Screen()
001034b4 00000b50 T m3d::Screen::render(bool)
00104004 00000058 W std::_Rb_tree<int, std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > >, std::_Select1st<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > >, std::less<int>, std::allocator<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > > >::_M_insert_node(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > >*)
0010405c 00000270 W void std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > >::_M_realloc_insert<std::pair<m3d::Drawable*, std::function<bool ()> > >(__gnu_cxx::__normal_iterator<std::pair<m3d::Drawable*, std::function<bool ()> >*, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > >, std::pair<m3d::Drawable*, std::function<bool ()> >&&)
001042cc 0000025c W std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > >::_M_insert_rval(__gnu_cxx::__normal_iterator<std::pair<m3d::Drawable*, std::function<bool ()> > const*, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > >, std::pair<m3d::Drawable*, std::function<bool ()> >&&)
00104528 00000094 W void std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > >::emplace_back<std::pair<m3d::Drawable*, std::function<bool ()> > >(std::pair<m3d::Drawable*, std::function<bool ()> >&&)
001045bc 000000ac W std::_Rb_tree<int, std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > >, std::_Select1st<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > >, std::less<int>, std::allocator<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > > >::_M_get_insert_unique_pos(int const&)
00104668 000001a0 W std::_Rb_tree_iterator<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > > std::_Rb_tree<int, std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > >, std::_Select1st<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > >, std::less<int>, std::allocator<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&)
00104808 00000100 W std::pair<std::_Rb_tree_iterator<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > >, bool> std::_Rb_tree<int, std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > >, std::_Select1st<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > >, std::less<int>, std::allocator<std::pair<int const, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > > >::_M_emplace_unique<std::pair<int, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > > >(std::pair<int, std::vector<std::pair<m3d::Drawable*, std::function<bool ()> >, std::allocator<std::pair<m3d::Drawable*, std::function<bool ()> > > > >&&)
00104908 00000750 T m3d::Screen::drawTop(m3d::Drawable&, m3d::RenderContext::Mode, int)
00105058 00000024 T m3d::Sprite::draw(m3d::RenderContext)
0010507c 00000008 T m3d::Sprite::getXPosition()
00105084 00000008 T m3d::Sprite::getYPosition()
0010508c 00000020 T m3d::Sprite::setPosition(int, int)
001050ac 0000008c T m3d::Sprite::setSpriteSheet(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
00105138 00000088 T m3d::Sprite::updateTint()
001051c0 0000009c T m3d::Sprite::Sprite(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
001051c0 0000009c T m3d::Sprite::Sprite(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0010525c 0000001c T m3d::buttons::buttonDown(m3d::buttons::Button)
00105278 00000020 t _GLOBAL__sub_I__ZN3m3d4priv8graphics14defaultCamera0E
00105298 00000020 W std::vector<int, std::allocator<int> >::~vector()
00105298 00000020 W std::vector<int, std::allocator<int> >::~vector()
001052b8 00000058 t _GLOBAL__sub_I__ZN3m3d4priv4ndsp12channelMutexE
00105310 00000020 T m3d::Camera::Camera()
00105310 00000020 T m3d::Camera::Camera()
00105330 00000084 T m3d::Camera::getViewMatrix()
001053b4 00000040 T m3d::RenderContext::RenderContext(int, bool, m3d::RenderContext::Mode, m3d::RenderContext::Stereo3dSide, m3d::RenderContext::ScreenTarget, C3D_Mtx&, C3D_LightEnv_t&, C3D_Light_t&, C3D_LightLut&)
001053b4 00000040 T m3d::RenderContext::RenderContext(int, bool, m3d::RenderContext::Mode, m3d::RenderContext::Stereo3dSide, m3d::RenderContext::ScreenTarget, C3D_Mtx&, C3D_LightEnv_t&, C3D_Light_t&, C3D_LightLut&)
001053f4 00000038 T m3d::RenderTarget::RenderTarget(int, int)
001053f4 00000038 T m3d::RenderTarget::RenderTarget(int, int)
0010542c 00000008 T m3d::RenderTarget::getRenderTarget()
00105434 0000000c T m3d::RenderTarget::clear()
00105440 00000330 T C2D_Init
00105770 00000044 T C2D_Fini
001057b4 000000c8 T C2D_Prepare
0010587c 0000010c T C2D_SceneSize
00105988 0000013c T C2Di_CalcQuad
00105ac4 00000030 T C2Di_FlushVtxBuf
00105af4 00000020 t C2Di_FrameEndHook
00105b14 00000018 T C2D_Flush
00105b2c 00000030 T C2D_TargetClear
00105b5c 00000210 T C2Di_Update
00105d6c 000002ec T C2D_DrawImage
00106058 0000006c T C2D_SpriteSheetLoadFromHandle
001060c4 00000034 T C2D_SpriteSheetLoad
001060f8 00000028 T C2D_SpriteSheetGetImage
00106120 000000c4 t C3Di_SplitFrame.part.1
001061e4 000000ac t C3Di_AptEventHook
00106290 00000004 W C3Di_GasUpdate
00106294 0000021c T C3D_Init
001064b0 00000098 T C3D_SetViewport
00106548 0000050c T C3Di_UpdateContext
00106a54 00000020 T C3Di_SplitFrame
00106a74 00000064 T C3D_Fini
00106ad8 00000114 T C3D_BindProgram
00106bec 00000054 t C3Di_RenderQueueInit
00106c40 00000080 t C3Di_RenderTargetDestroy
00106cc0 000000ac t onVBlank1
00106d6c 0000013c t onVBlank0
00106ea8 0000000c t C3Di_RenderTargetNew
00106eb4 0000007c t C3Di_WaitAndClearQueue
00106f30 000000c0 t onQueueFinish
00106ff0 00000044 t C3D_FrameSplit.part.6
00107034 00000030 T C3D_FrameSync
00107064 000000a0 T C3Di_RenderQueueExit
00107104 00000020 T C3Di_RenderQueueWaitDone
00107124 0000007c T C3D_FrameBegin
001071a0 00000048 T C3D_FrameDrawOn
001071e8 00000018 T C3D_FrameSplit
00107200 00000164 T C3D_FrameEnd
00107364 0000001c T C3D_FrameEndHook
00107380 0000017c T C3D_RenderTargetCreate
001074fc 0000004c T C3D_RenderTargetSetOutput
00107548 000000b4 T C3D_SyncTextureCopy
001075fc 00000284 T C3D_TexInitWithParams
00107880 000000dc T C3D_TexLoadImage
0010795c 00000048 T C3D_TexBind
001079a4 0000007c T C3D_TexDelete
00107a20 00000174 T C3Di_SetTex
00107b94 000000dc T C3Di_LightMtlBlend
00107c70 00000090 T C3D_LightInit
00107d00 0000001c T C3D_LightDiffuse
00107d1c 0000001c T C3D_LightSpecular0
00107d38 0000001c T C3D_LightSpecular1
00107d54 0000005c T C3D_LightPosition
00107db0 000003e8 t Tex3DSi_ImportCommon
00108198 00000034 T Tex3DS_TextureImportStdio
001081cc 0000001c T Tex3DS_GetSubTexture
001081e8 0000001c T C3D_CalcColorBufSize
00108204 0000001c T C3D_CalcDepthBufSize
00108220 00000044 T C3D_SetFrameBuf
00108264 00000168 T C3Di_FrameBufBind
001083cc 000000c8 T C3D_FrameBufClear
00108494 00000048 T C3D_FrameBufTransfer
001084dc 000000b8 T FogLut_FromArray
00108594 000000b8 T FogLut_Exp
0010864c 00000058 T C3D_FogGasMode
001086a4 00000020 T C3D_FogColor
001086c4 00000030 T C3D_FogLutBind
001086f4 00000034 T C3D_GetTexEnv
00108728 00000024 T C3Di_TexEnvBind
0010874c 0000006c T C3D_ProcTexInit
001087b8 00000050 T C3D_ProcTexBind
00108808 00000060 T C3D_ProcTexLutBind
00108868 000000a4 T ProcTexLut_FromArray
0010890c 00000174 T C3Di_ProcTexUpdate
00108a80 00000068 T C3Di_ProcTexDirty
00108ae8 00000024 T BufInfo_Init
00108b0c 00000084 T BufInfo_Add
00108b90 00000040 T C3D_SetBufInfo
00108bd0 00000048 T C3Di_BufInfoBind
00108c18 00000148 T C3D_DrawArrays
00108d60 00000040 T C3D_DepthMap
00108da0 0000001c T C3D_CullFace
00108dbc 00000040 T C3D_StencilTest
00108dfc 00000024 T C3D_StencilOp
00108e20 0000001c T C3D_BlendingColor
00108e3c 00000024 T C3D_EarlyDepthTest
00108e60 0000002c T C3D_DepthTest
00108e8c 0000002c T C3D_AlphaTest
00108eb8 00000050 T C3D_AlphaBlend
00108f08 00000030 T C3D_FragOpMode
00108f38 00000044 T C3D_FragOpShadow
00108f7c 000001ac T C3Di_EffectBind
00109128 00000028 T AttrInfo_Init
00109150 000000a0 T AttrInfo_AddLoader
001091f0 00000054 T C3D_SetAttrInfo
00109244 00000080 T C3Di_AttrInfoBind
001092c4 00000054 t C3Di_LightLutUpload
00109318 0000032c T C3Di_LightEnvUpdate
00109644 0000009c T C3Di_LightEnvDirty
001096e0 00000058 T C3D_LightEnvInit
00109738 0000002c T C3D_LightEnvBind
00109764 000000b8 T C3D_LightEnvLut
0010981c 000000a4 T C3D_ImmSendAttrib
001098c0 000000a8 T LightLut_FromArray
00109968 000000d8 T LightLut_FromFunc
00109a40 000002b8 T C3D_UpdateUniforms
00109cf8 000000c0 T C3Di_DirtyUniforms
00109db8 000000e0 T C3Di_LoadShaderUniforms
00109e98 00000028 T C3Di_ClearShaderUniforms
00109ec0 000000cc T Mtx_Ortho
00109f8c 000000a4 T Mtx_RotateX
0010a030 000000b8 T Mtx_PerspStereoTilt
0010a0e8 000000cc T Mtx_OrthoTilt
0010a1b4 000000a4 T Mtx_Translate
0010a258 000000a0 T Mtx_RotateZ
0010a2f8 000000a0 T Mtx_RotateY
0010a398 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0010a3bc 00000004 t addrMapNodeDestructor(rbtree_node*)
0010a3c0 00000114 T vramMemAlign
0010a4d4 00000008 T vramAlloc
0010a4dc 00000054 T vramFree
0010a530 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0010a554 00000004 t addrMapNodeDestructor(rbtree_node*)
0010a558 00000124 T linearMemAlign
0010a67c 00000008 T linearAlloc
0010a684 00000054 T linearFree
0010a6d8 0000008c T MemPool::CoalesceRight(MemBlock*)
0010a764 00000174 T MemPool::Allocate(MemChunk&, unsigned long, int)
0010a8d8 000000fc T MemPool::Deallocate(MemChunk const&)
0010a9d4 00000008 t romfs_close
0010a9dc 000000d4 t romfs_seek
0010aab0 00000024 t romfs_dirreset
0010aad4 00000078 t romfs_fstat
0010ab4c 00000054 t _romfs_read_chk
0010aba0 000000cc t romfs_read
0010ac6c 0000007c t romfs_free
0010ace8 0000016c t romfsMountCommon
0010ae54 00000254 t romfs_dirnext
0010b0a8 000000bc t romfsInitMtime.isra.0
0010b164 000000b4 t searchForFile.constprop.0
0010b218 000000b8 t searchForDir.constprop.0
0010b2d0 000001c4 t navigateToDir.constprop.0
0010b494 0000011c t romfs_open
0010b5b0 00000204 t romfs_stat
0010b7b4 00000054 t romfs_chdir
0010b808 00000078 t romfs_diropen
0010b880 00000008 t romfs_dirclose
0010b888 00000344 T romfsMount
0010bbcc 00000078 T romfsUnmount
0010bc44 00000038 t LightLock_Unlock.part.0
0010bc7c 0000000c T __sync_init
0010bc88 00000018 T __sync_fini
0010bca0 00000010 T __sync_get_arbiter
0010bcb0 00000018 T LightLock_Init
0010bcc8 00000090 T LightLock_Lock
0010bd58 00000034 T LightLock_TryLock
0010bd8c 00000020 T LightLock_Unlock
0010bdac 00000024 T RecursiveLock_Init
0010bdd0 00000030 T RecursiveLock_Lock
0010be00 00000058 T RecursiveLock_TryLock
0010be58 00000038 T RecursiveLock_Unlock
0010be90 00000038 T LightEvent_Init
0010bec8 0000007c T LightEvent_Clear
0010bf44 000000dc T LightEvent_Signal
0010c020 000000c0 T LightEvent_Wait
0010c0e0 00000058 t getSysTime
0010c138 00000028 t __ctru_speedup_config.part.0
0010c160 0000004c T osConvertVirtToPhys
0010c1ac 00000024 T osGetMemRegionUsed
0010c1d0 00000128 T __libctru_gtod
0010c2f8 00000070 T osGetTime
0010c368 00000018 T __ctru_speedup_config
0010c380 00000024 T osSetSpeedupEnable
0010c3a4 000001b8 T consoleDrawChar
0010c55c 00000124 T consolePrintChar
0010c680 0000015c t consoleCls
0010c7dc 00000104 T consoleInit
0010c8e0 0000010c t consoleClearLine
0010c9ec 000000c4 t newRow
0010cab0 000007cc T con_write
0010d27c 00000058 T srvExit
0010d2d4 00000038 T srvRegisterClient
0010d30c 000000cc T srvInit
0010d3d8 00000080 T srvGetServiceHandleDirect
0010d458 00000048 T srvGetServiceHandle
0010d4a0 00000014 t archive_link
0010d4b4 00000014 t archive_dirreset
0010d4c8 00000014 t archive_chmod
0010d4dc 00000024 t error_cmp
0010d500 00000050 t archive_translate_error
0010d550 00000034 t archive_fsync
0010d584 00000054 t archive_ftruncate
0010d5d8 00000038 t archive_dirclose
0010d610 0000013c t archive_dirnext
0010d74c 00000034 t archive_close
0010d780 00000070 t archive_fstat
0010d7f0 000000d4 t archive_seek
0010d8c4 00000078 t archive_read
0010d93c 000000ac t archive_write
0010d9e8 000000bc t sdmc_statvfs
0010daa4 00000080 t _archiveInit.part.0
0010db24 0000008c t archiveFindDevice.part.0
0010dbb0 00000138 t _archiveMountDevice
0010dce8 00000228 t archive_utf16path
0010df10 0000009c t archive_rmdir
0010dfac 000000b4 t archive_diropen
0010e060 000000b8 t archive_mkdir
0010e118 00000154 t archive_rename
0010e26c 000000c4 t archive_chdir
0010e330 00000084 t archive_unlink
0010e3b4 00000124 t archive_stat
0010e4d8 000001cc t archive_open
0010e6a4 000000a4 t _archiveUnmountDeviceStruct.part.0
0010e748 00000014 t archive_fchmod
0010e75c 00000014 t archive_statvfs
0010e770 00000168 T archiveMountSdmc
0010e8d8 00000054 T archiveUnmountAll
0010e92c 0000008c t gfxSetFramebufferInfo.part.0
0010e9b8 0000006c t gfxSetFramebufferInfo
0010ea24 00000058 t gfxGetFramebuffer.part.0
0010ea7c 00000010 T gfxSet3D
0010ea8c 00000010 T gfxIs3D
0010ea9c 00000018 T __get_bytes_per_pixel
0010eab4 00000184 T gfxSetScreenFormat
0010ec38 00000010 T gfxSetDoubleBuffering
0010ec48 00000214 T gfxInit
0010ee5c 00000010 T gfxInitDefault
0010ee6c 000000e0 T gfxExit
0010ef4c 00000064 T gfxGetFramebuffer
0010efb0 000000cc T gfxFlushBuffers
0010f07c 000000f4 T gfxConfigScreen
0010f170 00000020 T gfxSwapBuffersGpu
0010f190 0000001c t threadFree.part.0
0010f1ac 00000180 T threadCreate
0010f32c 00000018 T threadFree
0010f344 00000024 T threadJoin
0010f368 00000068 T threadExit
0010f3d0 00000048 t _thread_begin
0010f418 000001f0 T shaderInstanceInit
0010f608 00000034 T shaderInstanceFree
0010f63c 00000018 T shaderInstanceGetUniformLocation
0010f654 00000018 T shaderProgramInit
0010f66c 0000002c T shaderProgramFree
0010f698 0000006c T shaderProgramSetVsh
0010f704 000008b4 T shaderProgramConfigure
0010ffb8 000001f8 t DVLE_GenerateOutmap.part.0
001101b0 000001c8 T DVLB_ParseFile
00110378 00000038 T DVLB_Free
001103b0 00000078 T DVLE_GetUniformRegister
00110428 00000038 t submitGxCommand
00110460 00000010 T GX_BindQueue
00110470 00000050 T GX_ProcessCommandList
001104c0 00000054 T GX_MemoryFill
00110514 00000048 T GX_DisplayTransfer
0011055c 0000004c T GX_TextureCopy
001105a8 00000074 t gxCmdQueueDoCommands.part.0
0011061c 000000c8 T gxCmdQueueInterrupt
001106e4 0000004c T gxCmdQueueClear
00110730 000000f8 T gxCmdQueueAdd
00110828 00000080 T gxCmdQueueRun
001108a8 00000060 T gxCmdQueueStop
00110908 00000084 T gxCmdQueueWait
0011098c 0000013c T GPUCMD_Add
00110ac8 000000b0 T GPUCMD_Split
00110b78 00000040 T f32tof16
00110bb8 00000040 T f32tof24
00110bf8 00000044 T f32tof31
00110c3c 00000150 t ndspUpdateMaster
00110d8c 000000ec t ndspFinalize
00110e78 00000274 t ndspInitialize
001110ec 00000074 t ndspAptHook
00111160 00000168 t ndspSync
001112c8 00000104 t ndspThreadMain
001113cc 00000398 T ndspInit
00111764 000000fc T ndspExit
00111860 00000084 T ndspChnReset
001118e4 00000034 T ndspiInitChn
00111918 00000028 T ndspiDirtyChn
00111940 00000490 T ndspiUpdateChn
00111dd0 000001e8 T ndspiReadChnState
00111fb8 00000074 T gspInit
0011202c 0000003c T gspExit
00112068 00000034 T gspSetEventCallback
0011209c 000000a4 T gspInitEventHandler
00112140 00000040 T gspExitEventHandler
00112180 00000050 T gspWaitForEvent
001121d0 00000064 T gspWaitForAnyEvent
00112234 00000178 t gspEventThreadMain
001123ac 00000124 T gspSubmitGxCommand
001124d0 0000006c T GSPGPU_SetBufferSwap
0011253c 0000004c T GSPGPU_FlushDataCache
00112588 00000034 T GSPGPU_SetLcdForceBlack
001125bc 00000064 T GSPGPU_RegisterInterruptRelayQueue
00112620 0000002c T GSPGPU_UnregisterInterruptRelayQueue
0011264c 00000048 T GSPGPU_AcquireRight
00112694 0000002c T GSPGPU_ReleaseRight
001126c0 00000080 T GSPGPU_ImportDisplayCaptureInfo
00112740 0000002c T GSPGPU_SaveVramSysArea
0011276c 0000002c T GSPGPU_RestoreVramSysArea
00112798 0000008c T acInit
00112824 0000003c T acExit
00112860 000000a4 T cfguInit
00112904 0000003c T cfguExit
00112940 00000048 T CFGU_GetConfigInfoBlk2
00112988 0000003c T dspExit
001129c4 00000034 T DSP_SetSemaphore
001129f8 00000034 T DSP_SetSemaphoreMask
00112a2c 00000038 T DSP_GetSemaphoreHandle
00112a64 00000064 T DSP_LoadComponent
00112ac8 0000002c T DSP_UnloadComponent
00112af4 00000080 T dspInit
00112b74 00000044 T DSP_RegisterInterruptEvents
00112bb8 00000070 T DSP_ReadPipeIfPossible
00112c28 0000004c T DSP_WriteProcessPipe
00112c74 00000040 T DSP_ConvertProcessAddressFromDspDram
00112cb4 00000040 T DSP_RecvData
00112cf4 0000004c T DSP_RecvDataIsReady
00112d40 00000028 t fsSessionForArchive.part.0
00112d68 000000c4 T fsInit
00112e2c 0000003c T fsExit
00112e68 00000064 T fsExemptFromSession
00112ecc 0000005c T fsUnexemptFromSession
00112f28 000000bc T FSUSER_OpenFile
00112fe4 000000d4 T FSUSER_OpenFileDirectly
001130b8 000000ac T FSUSER_DeleteFile
00113164 000000e8 T FSUSER_RenameFile
0011324c 000000ac T FSUSER_DeleteDirectory
001132f8 000000c4 T FSUSER_CreateFile
001133bc 000000b4 T FSUSER_CreateDirectory
00113470 000000e8 T FSUSER_RenameDirectory
00113558 000000a0 T FSUSER_OpenDirectory
001135f8 00000098 T FSUSER_OpenArchive
00113690 000000a0 T FSUSER_ControlArchive
00113730 00000078 T FSUSER_CloseArchive
001137a8 00000078 T FSUSER_GetSdmcArchiveResource
00113820 00000064 T FSUSER_IsSdmcWritable
00113884 0000005c T FSFILE_Read
001138e0 00000064 T FSFILE_Write
00113944 00000038 T FSFILE_GetSize
0011397c 00000028 T FSFILE_SetSize
001139a4 0000003c T FSFILE_Close
001139e0 00000024 T FSFILE_Flush
00113a04 00000054 T FSDIR_Read
00113a58 0000003c T FSDIR_Close
00113a94 00000004 W _aptDebug
00113a98 00000170 T aptSendCommand
00113c08 0000003c t aptExitProcess
00113c44 00000030 T aptHook
00113c74 00000030 T aptUnhook
00113ca4 00000050 T APT_InquireNotification
00113cf4 00000194 t aptEventHandler
00113e88 00000074 T APT_AppletUtility
00113efc 000000b0 T aptSetSleepAllowed
00113fac 000000b4 T APT_GlanceParameter
00114060 000000c8 T APT_ReceiveParameter
00114128 000000bc t aptReceiveParameter.constprop.0
001141e8 000001e0 t aptScreenTransfer
001143c8 00000210 t aptWaitForWakeUp
001145d8 00000070 T APT_CancelParameter
00114648 0000025c T aptInit
001148a4 00000088 t aptClearParamQueue
0011492c 00000264 T aptMainLoop
00114b90 00000254 T aptExit
00114de4 0000007c T APT_CheckNew3DS
00114e60 00000074 T ptmuInit
00114ed4 0000003c T ptmuExit
00114f10 00000028 t hidCheckSectionUpdateTime.part.0
00114f38 000000d0 T hidExit
00115008 000001d8 T hidScanInput
001151e0 00000010 T hidKeysHeld
001151f0 00000090 T HIDUSER_GetHandles
00115280 000001a4 T hidInit
00115424 0000000c T srvPmGetSessionHandle
00115430 00000074 T ptmSysmInit
001154a4 0000003c T ptmSysmExit
001154e0 00000034 T PTMSYSM_ConfigureNew3DSCPU
00115514 00000120 t iov_memmove
00115634 000000cc t buffer_read
00115700 000000d8 t iov_read
001157d8 000001c4 t decompress_rle
0011599c 00000268 t decompress_lzss
00115c04 000002ec t decompress_huff.isra.0.part.0
00115ef0 00000440 t decompress_lz11
00116330 00000010 T decompressCallback_Stdio
00116340 000000e8 T decompressHeader
00116428 0000023c T decompressV
00116664 00000014 T rbtree_init
00116678 000001a4 t do_insert
0011681c 00000008 T rbtree_insert
00116824 00000090 T rbtree_rotate
001168b4 00000334 T rbtree_remove
00116be8 00000074 T rbtree_find
00116c5c 000000c0 T utf8_to_utf16
00116d1c 00000138 T decode_utf8
00116e54 000000e8 T utf16_to_utf8
00116f3c 00000038 W __libctru_init
00116f74 00000034 t __libctru_nanosleep
00116fa8 00000030 t __ctru_get_reent
00116fd8 000000fc T __system_initSyscalls
001170d4 00000100 W __system_allocateHeaps
001171d4 000000f0 T __system_initArgv
001172c4 T svcControlMemory
001172e4 T svcExitProcess
001172ec T svcCreateThread
0011730c T svcExitThread
00117314 T svcSleepThread
0011731c T svcGetThreadPriority
00117330 T svcReleaseMutex
00117338 T svcCreateEvent
0011734c T svcSignalEvent
00117354 T svcClearEvent
0011735c T svcMapMemoryBlock
00117364 T svcUnmapMemoryBlock
0011736c T svcCreateAddressArbiter
00117380 T svcArbitrateAddress
00117398 T svcCloseHandle
001173a0 T svcWaitSynchronization
001173a8 T svcWaitSynchronizationN
001173d0 T svcDuplicateHandle
001173e4 T svcGetSystemTick
001173ec T svcGetSystemInfo
00117404 T svcConnectToPort
00117418 T svcSendSyncRequest
00117420 T svcBreak
00117428 T __aeabi_read_tp
00117434 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
00117458 00000004 t addrMapNodeDestructor(rbtree_node*)
0011745c 000000e8 T mappableAlloc
00117544 00000054 T mappableFree
00117598 00000084 T envGetHandle
0011761c 0000004c T envDestroyHandles
00117668 000000ac T irrstScanInput
00117714 00000024 T irrstKeysHeld
00117738 00000050 T IRRST_GetHandles
00117788 00000154 T irrstInit
001178dc 0000002c T IRRST_Shutdown
00117908 000000ac T irrstExit
001179b4 00000050 T rbtree_node_next
00117a04 00000068 T encode_utf16
00117a6c 00000104 T encode_utf8
00117b70 00000060 T decode_utf16
00117bd0 0000001c W __appInit
00117bec 0000001c W __appExit
00117c08 000000a0 W __libctru_exit
00117ca8 00000010 T __aeabi_atexit
00117cb8 00000004 T operator delete(void*)
00117cbc 00000004 T operator delete(void*, unsigned int)
00117cc0 0000005c T operator new(unsigned int)
00117d1c 00000070 t std::local_Rb_tree_decrement(std::_Rb_tree_node_base*)
00117d8c 0000005c T std::_Rb_tree_increment(std::_Rb_tree_node_base*)
00117de8 00000004 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
00117dec 000002a8 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
00118094 0000002c T std::__throw_bad_alloc()
001180c0 00000048 T std::__throw_logic_error(char const*)
00118108 00000048 T std::__throw_length_error(char const*)
00118150 0000000c T std::bad_function_call::what() const
0011815c 00000020 T std::bad_function_call::~bad_function_call()
0011815c 00000020 T std::bad_function_call::~bad_function_call()
0011817c 00000028 T std::bad_function_call::~bad_function_call()
001181a4 0000002c T std::__throw_bad_function_call()
001181d0 000000d0 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const
001182a0 000000c8 T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned int, unsigned int, unsigned int) const
00118368 0000000c T std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
00118374 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
001183cc 000000bc W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00118488 0000000c T std::bad_alloc::what() const
00118494 00000020 T std::bad_alloc::~bad_alloc()
00118494 00000020 T std::bad_alloc::~bad_alloc()
001184b4 0000002c T std::bad_alloc::~bad_alloc()
001184e0 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0011853c 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00118550 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
00118550 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
00118570 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
0011859c 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00118604 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00118630 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
00118674 000000d4 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
00118748 00000090 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
001187d8 00000044 T __cxa_allocate_exception
0011881c 00000030 T __cxa_free_exception
0011884c 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0011888c T __cxa_end_cleanup
0011889c 00000138 T __cxa_type_match
001189d4 000000b4 T __cxa_begin_cleanup
00118a88 000000b4 T __gnu_end_cleanup
00118b3c 000000cc T __cxa_begin_catch
00118c08 000000e0 T __cxa_end_catch
00118ce8 00000004 T std::exception::~exception()
00118ce8 00000004 T std::exception::~exception()
00118cec 00000004 T std::bad_exception::~bad_exception()
00118cec 00000004 T std::bad_exception::~bad_exception()
00118cf0 0000000c T transaction clone for std::bad_exception::what() const
00118cf0 0000000c T std::bad_exception::what() const
00118cfc 00000018 T std::bad_exception::~bad_exception()
00118d14 0000000c T __cxa_get_globals_fast
00118d20 0000000c T __cxa_get_globals
00118d2c 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
00118e94 00000064 t base_of_encoded_value(unsigned char, _Unwind_Context*)
00118ef8 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
00118fd0 00000700 T __gxx_personality_v0
001196d0 00000038 T __cxxabiv1::__terminate(void (*)())
00119708 00000018 T std::terminate()
00119720 0000000c T __cxxabiv1::__unexpected(void (*)())
0011972c 00000018 T std::unexpected()
00119744 00000014 T std::get_terminate()
00119758 00000014 T std::get_unexpected()
0011976c 00000070 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
001197dc 00000070 T __cxa_init_primary_exception
0011984c 00000058 T __cxa_throw
001198a4 000000b0 T __cxa_rethrow
00119954 00000014 T std::get_new_handler()
00119968 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00119968 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00119988 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
001199b4 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00119a20 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00119afc 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00119b40 00000004 T std::type_info::~type_info()
00119b40 00000004 T std::type_info::~type_info()
00119b44 00000008 T std::type_info::__is_pointer_p() const
00119b44 00000008 T std::type_info::__is_function_p() const
00119b4c 0000004c T std::type_info::operator==(std::type_info const&) const
00119b98 00000008 T std::logic_error::what() const
00119ba0 00000064 T std::logic_error::~logic_error()
00119ba0 00000064 T std::logic_error::~logic_error()
00119c04 0000001c T std::logic_error::~logic_error()
00119c20 00000020 T std::length_error::~length_error()
00119c20 00000020 T std::length_error::~length_error()
00119c40 00000028 T std::length_error::~length_error()
00119c68 00000038 T std::logic_error::logic_error(char const*)
00119c68 00000038 T std::logic_error::logic_error(char const*)
00119ca0 00000020 T std::length_error::length_error(char const*)
00119ca0 00000020 T std::length_error::length_error(char const*)
00119cc0 00000088 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
00119d48 00000070 t char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.0]
00119d48 00000070 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.0]
00119db8 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
00119dbc 00000030 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
00119dec 0000004c W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
00119dec 0000004c W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
00119e38 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
00119ea8 0000002c T __cxa_call_terminate
00119ed4 00000158 T __cxa_call_unexpected
0011a030 00000244 T cosf
0011a274 00000024 t with_errnof
0011a298 00000018 t xflowf
0011a2b0 0000000c T __math_uflowf
0011a2bc 0000000c T __math_may_uflowf
0011a2c8 0000000c T __math_oflowf
0011a2d4 0000002c T __math_divzerof
0011a300 0000001c T __math_invalidf
0011a320 00000130 T expf
0011a450 0000016c T floor
0011a5c0 000003f4 T powf
0011a9b8 000000a8 T frexp
0011aa60 0000007c T tanf
0011aae0 0000026c T sinf
0011ad4c 000002e0 T __ieee754_rem_pio2f
0011b02c 0000087c T __kernel_rem_pio2f
0011b8a8 000001f4 T __kernel_tanf
0011ba9c 00000010 T fabsf
0011baac 000000b4 T floorf
0011bb60 00000148 T scalbnf
0011bca8 00000038 T __aeabi_d2lz
0011bca8 00000038 T __fixdfdi
0011bce0 00000040 T __aeabi_d2ulz
0011bce0 00000040 T __fixunsdfdi
0011bd20 00000130 T __udivmoddi4
0011be50 00000018 t selfrel_offset31
0011be68 0000008c t search_EIT_table
0011bef4 00000040 t __gnu_unwind_get_pr_addr
0011bf34 00000114 t get_eit_entry
0011c048 00000088 t restore_non_core_regs
0011c0d0 00000014 t _Unwind_decode_typeinfo_ptr.isra.0
0011c0e4 00000004 t _Unwind_DebugHook
0011c0e8 00000064 t unwind_phase2
0011c14c 00000134 t unwind_phase2_forced
0011c280 000000a4 T __gnu_Unwind_RaiseException
0011c324 00000024 T __gnu_Unwind_ForcedUnwind
0011c348 00000074 T __gnu_Unwind_Resume
0011c3bc 00000020 T __gnu_Unwind_Resume_or_Rethrow
0011c3dc 00000004 T _Unwind_Complete
0011c3e0 00000018 T _Unwind_DeleteException
0011c3f8 00000064 T _Unwind_VRS_Get
0011c45c 0000002c t _Unwind_GetGR
0011c488 00000064 T _Unwind_VRS_Set
0011c4ec 00000030 t _Unwind_SetGR
0011c51c 000000c0 T __gnu_Unwind_Backtrace
0011c5dc 0000044c t __gnu_unwind_pr_common
0011ca28 00000008 T __aeabi_unwind_cpp_pr0
0011ca30 00000008 W __aeabi_unwind_cpp_pr1
0011ca38 00000008 W __aeabi_unwind_cpp_pr2
0011ca40 000003d0 T _Unwind_VRS_Pop
0011ce10 00000060 t next_unwind_byte
0011ce70 0000002c t _Unwind_GetGR.constprop.0
0011ce9c 00000004 t unwind_UCB_from_context
0011cea0 000003c8 T __gnu_unwind_execute
0011d268 00000044 T __gnu_unwind_frame
0011d2ac 00000010 T _Unwind_GetRegionStart
0011d2bc 0000001c T _Unwind_GetLanguageSpecificData
0011d2d8 00000008 T _Unwind_GetDataRelBase
0011d2e0 00000008 T _Unwind_GetTextRelBase
0011d2e8 00000014 T abort
0011d2fc 0000007c T bsearch
0011d378 00000028 T calloc
0011d3a0 00000094 T _calloc_r
0011d434 00000018 T __cxa_atexit
0011d44c 0000000c T __errno
0011d458 00000034 T exit
0011d48c 00000160 T _fclose_r
0011d5ec 00000020 T fclose
0011d60c 00000278 T __sflush_r
0011d884 00000094 T _fflush_r
0011d918 00000038 T fflush
0011d950 00000078 t std
0011d9c8 0000000c T _cleanup_r
0011d9d4 00000048 T __sfmoreglue
0011da1c 0000008c T __sinit
0011daa8 0000010c T __sfp
0011dbb4 0000000c T __sfp_lock_acquire
0011dbc0 0000000c T __sfp_lock_release
0011dbcc 0000003c T __libc_fini_array
0011dc08 00000138 T _fopen_r
0011dd40 00000028 T fopen
0011dd68 000002e0 T _fread_r
0011e048 00000038 T fread
0011e080 000000f8 T _malloc_trim_r
0011e178 000002e8 T _free_r
0011e460 00000020 T _fseek_r
0011e480 000005ac T _fseeko_r
0011ea2c 00000068 T _fwalk
0011ea94 00000070 T _fwalk_reent
0011eb04 0000007c T __libc_init_array
0011eb80 00000094 T __swhatbuf_r
0011ec14 000000f8 T __smakebuf_r
0011ed0c 00000028 T memalign
0011ed34 0000014c T _memalign_r
0011ee80 00000020 T malloc
0011eea0 00000020 T free
0011eec0 000007d0 T _malloc_r
0011f690 000000e0 T memchr
0011f770 000000a0 T memcmp
0011f810 00000120 T memcpy
0011f930 00000154 T memmove
0011fa84 00000118 T memset
0011fb9c 0000000c T __malloc_lock
0011fba8 0000000c T __malloc_unlock
0011fbb4 0000001c t lflush
0011fbd0 000001ac T __srefill_r
0011fd7c 00000260 T setvbuf
0011ffdc 00000098 T _raise_r
00120074 00000020 T raise
00120094 00000074 T sscanf
00120108 0000003c T __sread
00120144 00000008 T __seofread
0012014c 00000068 T __swrite
001201b4 00000058 T __sseek
0012020c 00000008 T __sclose
00120214 00000144 T strchr
00120358 0000005c T strlen
001203b4 00000098 T strncat
0012044c 000000ec T strncmp
00120538 000000c0 T strncpy
001205f8 00000048 T strnlen
00120640 00000054 t sulp
00120698 00001414 T _strtod_l
00121aac 0000000c T _strtod_r
00121ab8 000001c8 t _strtoul_l.isra.0
00121c80 00000004 T _strtoul_r
00121c84 00000048 t get_arg
00121ccc 00002b84 T __ssvfscanf_r
00124850 0000003c T time
0012488c 00000054 T _wcrtomb_r
001248e0 00000020 T _wcsrtombs_r
00124900 000000b0 T __register_exitproc
001249b0 00000118 T __call_exitprocs
00124ac8 000001a8 t quorem
00124c70 000012ac T _dtoa_r
00125f1c 000000c8 T __sflags
00125fe4 000000ec t rshift
001260d0 00000828 T __gethex
001268f8 00000060 T __match
00126958 0000028c T __hexnan
00126be4 00000008 T iswspace
00126bec 0000000c T _localeconv_r
00126bf8 00000010 T __locale_mb_cur_max
00126c08 00000060 T _mbrtowc_r
00126c68 000002fc T __utf8_mbtowc
00126f64 00000088 T _Balloc
00126fec 0000001c T _Bfree
00127008 000000d0 T __multadd
001270d8 000000ec T __s2b
001271c4 00000058 T __hi0bits
0012721c 0000009c T __lo0bits
001272b8 00000020 T __i2b
001272d8 000001e0 T __multiply
001274b8 00000100 T __pow5mult
001275b8 00000114 T __lshift
001276cc 00000058 T __mcmp
00127724 00000190 T __mdiff
001278b4 00000088 T __ulp
0012793c 000000d4 T __b2d
00127a10 00000104 T __d2b
00127b14 00000084 T __ratio
00127b98 0000006c T __copybits
00127c04 0000005c T __any_on
00127c60 00000028 T realloc
00127c88 000004bc T _realloc_r
00128144 000000e8 T __sccl
0012822c 0000000c T nanf
00128238 00000010 T nan
00128248 00000064 T sprintf
001282ac 000000b8 T stpncpy
00128364 0000023c t _strtoll_l.isra.0
001285a0 00000004 T _strtoll_r
001285a4 000001b4 t _strtol_l.isra.0
00128758 00000004 T _strtol_r
00128760 0000024c t _strtoull_l.isra.0
001289ac 00000004 T _strtoull_r
001289b0 00000188 T __ssprint_r
00128b38 000000e0 T _sungetc_r
00128c18 0000006c T __ssrefill_r
00128c84 000000c8 T _sfread_r
00128d4c 00000650 t get_arg
001293a0 00003814 T _svfprintf_r
0012cbb4 000000a8 T __submore
0012cc5c 00000190 T _wcsnrtombs_l
0012cdec 00000048 T _wcsnrtombs_r
0012ce34 000000f0 T __utf8_wctomb
0012cf24 0000003c T iswspace_l
0012cf60 000001e0 t __jp2uc
0012d140 00000094 T _jp2uc_l
0012d1d4 00000088 T category
0012d25c 00000008 t null_write
0012d264 00000018 T setDefaultDevice
0012d27c 000000c8 T FindDevice
0012d344 00000028 T RemoveDevice
0012d36c 0000009c T AddDevice
0012d408 00000020 T GetDeviceOpTab
0012d428 00000078 T _fstat_r
0012d4a0 00000014 T _getpid_r
0012d4b4 00000038 T _gettimeofday_r
0012d4ec 00000008 T _isatty_r
0012d4f4 00000014 T _kill_r
0012d508 00000084 T _lseek_r
0012d58c 000000c4 T _open_r
0012d650 00000080 T _read_r
0012d6d0 00000078 T _sbrk_r
0012d748 00000080 T _write_r
0012d7c8 00000024 T _exit
0012d7ec 000001bc T _concatenate_path
0012d9a8 0000015c T chdir
0012db04 00000008 T __flockfile
0012db0c 00000008 T __funlockfile
0012db14 00000018 T __libc_lock_acquire
0012db2c 00000018 T __libc_lock_release
0012db44 00000018 T __libc_lock_init_recursive
0012db5c 00000018 T __libc_lock_acquire_recursive
0012db74 00000018 T __libc_lock_release_recursive
0012db8c 00000018 T __libc_lock_close_recursive
0012dba4 0000008c T __release_handle
0012dc30 000000b4 T __alloc_handle
0012dce4 0000003c T __get_handle
0012dd20 000000f8 T _close_r
0012de18 00000028 T __getreent
0012de40 00000044 T strrchr
0012de84 T _fini
0012e000 00000028 R vtable for squid::SceneGame
0012e028 00000028 R vtable for squid::SplashScene
0012e050 R render3d_shbin
0012e224 R render3d_shbin_end
0012e224 R render3d_shbin_size
0012e228 R render2d_shbin
0012e3b4 R render2d_shbin_end
0012e3b4 R render2d_shbin_size
0012e3e8 R default_font_bin
0012ebe8 R default_font_bin_end
0012ebe8 R default_font_bin_size
0012ebec r .LC0
0012ebec r .LC0
0012ec04 0000001c V vtable for std::_Sp_counted_ptr_inplace<squid::SplashScene, std::allocator<squid::SplashScene>, (__gnu_cxx::_Lock_policy)0>
0012ec20 0000001c V vtable for std::_Sp_counted_ptr_inplace<squid::SceneGame, std::allocator<squid::SceneGame>, (__gnu_cxx::_Lock_policy)0>
0012ec3c 00000008 V std::_Sp_make_shared_tag::_S_ti()::__tag
0012ec50 00000018 V vtable for m3d::Parameter::data<decltype(nullptr)>
0012ec68 00000010 R vtable for m3d::Lock
0012ec78 00000010 R vtable for m3d::Thread
0012ecc0 00000001 r std::piecewise_construct
0012ecc4 0000000c R vtable for m3d::Sprite
0012ece4 00000038 r CSWTCH.11
0012ed1c 00000005 r colorFmtSizes
0012ed24 00000004 r depthFmtSizes
0012ed28 00000010 r CSWTCH.7
0012ed38 00000008 r ids.14909
0012ed40 00000007 r layer_enabled.14842
0012ed48 00000006 r lutIds.14858
0012ede8 00000030 r colorTable
0012ee18 00000070 r dotab_stdout
0012eeac 00000070 r archive_devoptab
0012ef1c 00000030 r error_table
0012ef4c 00000014 r CSWTCH.62
0012ef60 00000008 r framebufferInfoSt
0012ef70 00000011 r dsp_filename.8777
0012f020 0000000c R typeinfo for std::bad_function_call
0012f02c 00000016 R typeinfo name for std::bad_function_call
0012f044 00000014 R vtable for std::bad_function_call
0012f058 00000404 R std::__detail::__prime_list
0012f45c 0000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const::__fast_bkt
0012f46c 00000018 V typeinfo name for std::_Sp_make_shared_tag
0012f484 00000008 V typeinfo for std::_Sp_make_shared_tag
0012f4b4 0000000c R typeinfo for std::bad_alloc
0012f4c0 0000000d R typeinfo name for std::bad_alloc
0012f4d0 00000014 R vtable for std::bad_alloc
0012f4e4 0000000c R typeinfo for __cxxabiv1::__class_type_info
0012f4f0 00000022 R typeinfo name for __cxxabiv1::__class_type_info
0012f514 0000002c R vtable for __cxxabiv1::__class_type_info
0012f554 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0012f55c 00000008 R typeinfo for __cxxabiv1::__foreign_exception
0012f564 0000000c R typeinfo for std::bad_exception
0012f570 00000008 R typeinfo for std::exception
0012f578 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0012f598 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0012f5bc 00000012 R typeinfo name for std::bad_exception
0012f5d0 0000000d R typeinfo name for std::exception
0012f5e0 00000014 R vtable for std::bad_exception
0012f5f4 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
0012f600 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0012f628 0000002c R vtable for __cxxabiv1::__si_class_type_info
0012f654 00000008 R typeinfo for std::type_info
0012f65c 0000000d R typeinfo name for std::type_info
0012f66c 0000000c R typeinfo for std::logic_error
0012f678 0000000c R typeinfo for std::length_error
0012f684 00000010 R typeinfo name for std::logic_error
0012f694 00000011 R typeinfo name for std::length_error
0012f6a8 00000014 R vtable for std::logic_error
0012f6bc 00000014 R vtable for std::length_error
0012f714 00000060 R __inv_pio4
0012f778 000000e0 R __sincosf_table
0012f858 00000080 r npio2_hw
0012f8d8 00000318 r two_over_pi
0012fbf0 0000002c r PIo2
0012fc1c 0000000c r init_jk
0012fc28 00000148 R __exp2f_data
0012fd70 00000128 R __powf_log2_data
0012fe98 00000004 R _global_impure_ptr
0012feac 00000014 r fpi.7590
0012fec0 00000014 r fpinan.7626
0012fed8 00000028 r tinytens
0012ff08 00000022 r basefix.8820
0012ff2c 00000101 R _ctype_
00130040 r .LC2
00130044 00000100 R __hexdig
00130144 0000000c R _C_numeric_locale
00130198 00000028 R __mprec_bigtens
001301c0 000000c8 R __mprec_tens
00130288 0000000c r p05.7510
00130294 0000006c R __action_table
00130300 00000100 R __chclass
00130400 0000006c R __state_table
001304a8 00000010 r blanks.8776
001304b8 00000010 r zeroes.8777
001304dc 000000bc r a1
00130598 000000bc r a2
00130654 0000005b r a3
001306b0 00000070 r a6
00130720 000000a2 r a7
001307c4 00000040 r a8
00130804 0000172a r b02cf
00131f30 00001a7c r d02f4
001339ac 0000309c r categories
00136a48 00000070 R dotab_stdnull
00136ab8 r 
00136b70 R __exidx_start
00136d60 R __exidx_end
00137000 W __stacksize__
00137004 D __dso_handle
00137008 00000004 d framerate
0013700c 00000008 d framerateCounter
00137014 00000070 d romFS_devoptab
00137084 00000004 D currentConsole
00137088 0000004c D defaultConsole
001370d4 00000001 d firstConsoleInit.8429
001370d5 00000001 d botFormat
001370d8 00000008 d doubleBuf
001370e0 00000001 d topFormat
001370e4 00000004 d queueLock
001370e8 00000004 d gspLastEvent
001370ec 00000004 d aptFlags
001370f0 00000001 d aptHomeAllowed
001370f4 00000004 V __ctru_linear_heap_size
001370f8 00000004 D __cxxabiv1::__unexpected_handler
001370fc 00000004 D __cxxabiv1::__terminate_handler
00137100 0000000c d __sfp_recursive_mutex
0013710c 0000000c d __sinit_recursive_mutex
00137118 00000004 D _impure_ptr
00137120 00000460 d impure_data
00137580 00000408 D __malloc_av_
00137988 00000004 D __malloc_sbrk_base
0013798c 00000004 D __malloc_trim_threshold
00137990 0000000c d __malloc_recursive_mutex
0013799c 0000000c D __atexit_recursive_mutex
001379a8 00000002 d numempty
001379ac 0000016c D __global_locale
00137b18 00000004 d defaultDevice
00137b1c 0000008c D devoptab_list
00137ba8 00000400 d _current_working_directory
00137fa8 00000004 d __hndl_lock
00137fac 0000000c d __stderr_handle
00137fb8 0000000c d __stdin_handle
00137fc4 0000000c d __stdout_handle
00137fd0 00001000 d handles
00138fd0 t __frame_dummy_init_array_entry
00138fd0 T __init_array_start
00138fd0 B __preinit_array_end
00138fd0 B __preinit_array_start
00138fd0 D __tdata_lma
00138fd0 D __tdata_lma_end
00138fd0 D __TMC_END__
00138fd0 d __TMC_LIST__
00138fe0 t __do_global_dtors_aux_fini_array_entry
00138fe0 T __fini_array_start
00138fe0 T __init_array_end
00138fe4 T __bss_start__
00138fe4 T __fini_array_end
00138fe4 b saved_stack
00138fec b completed.10434
00138ff0 b object.10439
00139008 00000004 B m3d::priv::core::ptmsysmHandle
0013900c 00000001 B m3d::priv::core::ledPatternRunning
00139010 00000058 B m3d::priv::graphics::defaultCamera0
00139068 00000058 B m3d::priv::graphics::defaultCamera1
001390c0 00000001 B m3d::priv::ndsp::initialized
001390c4 0000000c B m3d::priv::ndsp::channelMutex
001390d0 0000000c B m3d::priv::ndsp::occupiedChannels
001390dc 00000040 b s_projBot
0013911c 00000040 b s_projTop
0013915c 00000004 b uLoc_mdlvMtx
00139160 00000004 b uLoc_projMtx
00139164 0000000c b hookCookie
00139170 00000010 b cpuTime
00139180 00000004 b firstTarget
00139184 00000008 b frameCounter
0013918c 00000004 b frameEndCb
00139190 00000004 b frameEndCbData
00139194 00000001 b frameStage
00139198 00000010 b gpuTime
001391a8 00000001 b inFrame
001391a9 00000001 b inSafeTransfer
001391aa 00000001 b initialized
001391ac 00000004 b lastTarget
001391b0 0000000c b linkedTarget
001391bc 00000001 b measureGpuTime
001391c0 000000c0 b C3Di_FVUnifEverDirty
00139280 00000008 b C3Di_IVUnifEverDirty
00139288 00000018 b C3Di_ShaderFVecData
001392a0 0000000c b sAddrMap
001392ac 00000008 b sVramPool
001392b4 00000008 b sLinearPool
001392bc 0000000c b sAddrMap
001392c8 00000401 b __component
001396cc 00000004 V __romfs_path
001396d0 00000802 b __utf16path
00139ed4 00000004 b romfs_mount_list
00139ed8 00000004 b arbiter
00139edc 00000001 V __ctru_speedup
00139ee0 00000004 b srvHandle
00139ee4 00000004 b srvRefCount
00139ee8 00000004 b archive_device_cwd
00139ef0 00001500 b archive_devices
0013b3f0 00000001 b archive_initialized
0013b3f4 00000002 b currentBuffer
0013b3f6 00000001 b enable3d
0013b3f8 00000004 b screenAlloc
0013b3fc 00000004 b screenFree
0013b400 00000004 b boundQueue
0013b404 00000004 b curQueue
0013b408 00000001 b isActive
0013b409 00000001 b isRunning
0013b40a 00000001 b shouldStop
0013b40c 0000000c b aptCookie
0013b418 00000001 b bActuallySleeping
0013b419 00000001 b bComponentLoaded
0013b41a 00000001 b bDspReady
0013b41b 00000001 b bNeedsSync
0013b41c 00000001 b bSleeping
0013b420 00000004 b componentBin
0013b424 00000002 b componentDataMask
0013b426 00000001 b componentFree
0013b428 00000002 b componentProgMask
0013b42c 00000004 b componentSize
0013b430 00000004 b droppedFrames
0013b434 00000004 b dspSem
0013b438 00001080 b dspVar5Backup
0013c4b8 00000004 b frameCount
0013c4bc 00000004 b irqEvent
0013c4c0 00000048 b ndspMaster
0013c508 00000004 b ndspMutex
0013c50c 00000004 b ndspRefCount
0013c510 00000004 b ndspThread
0013c514 00000001 b ndspThreadRun
0013c518 00000008 b sleepEvent
0013c520 00000c60 b ndspChn
0013d180 00000004 b gspEvent
0013d184 0000001c b gspEventCb
0013d1a0 0000001c b gspEventCbData
0013d1bc 00000007 b gspEventCbOneShot
0013d1c4 0000001c b gspEventCounts
0013d1e0 00000004 b gspEventData
0013d1e4 00000004 b gspEventThread
0013d1e8 00000038 b gspEvents
0013d220 00000004 b gspRefCount
0013d224 00000001 b gspRunEvents
0013d228 00000004 b acHandle
0013d22c 00000004 b acRefCount
0013d230 00000004 b cfguHandle
0013d234 00000004 b cfguRefCount
0013d238 00000004 b dspHandle
0013d23c 00000004 b dspRefCount
0013d240 00000080 b fsExemptArchives
0013d2c0 00000004 b fsuHandle
0013d2c4 00000004 b fsuRefCount
0013d2c8 00000001 b aptChainloadMediatype
0013d2d0 00000008 b aptChainloadTid
0013d2d8 00000004 b aptEventHandlerThread
0013d2dc 0000000c b aptEvents
0013d2e8 0000000c b aptFirstHook
0013d2f4 00000001 b aptHomeButtonState
0013d2f8 00000004 b aptLockHandle
0013d2fc 00000004 b aptMessageFunc
0013d300 00000004 b aptMessageFuncData
0013d304 00001000 b aptParameters
0013e304 00000001 b aptRecentHomeButtonState
0013e308 00000004 b aptRefCount
0013e30c 00000008 b aptSleepEvent
0013e314 00000001 b flagInit.8300
0013e315 00000001 b flagValue.8301
0013e318 00000004 b serviceName.7930
0013e31c 00000004 b ptmuHandle
0013e320 00000004 b ptmuRefCount
0013e324 00000006 b aVec
0013e32c 00000004 b cPos
0013e330 00000006 b gRate
0013e338 00000004 b hidRefCount
0013e33c 00000004 b kDown
0013e340 00000004 b kHeld
0013e344 00000004 b kOld
0013e348 00000004 b kUp
0013e34c 00000004 b tPos
0013e350 00000004 b srvPmHandle
0013e354 00000004 b ptmSysmHandle
0013e358 00000004 b ptmSysmRefCount
0013e35c 00000004 V __ctru_heap_size
0013e360 00000008 b sMappablePool
0013e368 0000000c b sAddrMap
0013e374 00000004 b csPos
0013e378 00000004 b irrstRefCount
0013e37c 00000004 b kHeld
0013e380 00000010 b (anonymous namespace)::emergency_pool
0013e390 0000000c b eh_globals
0013e39c 00000004 b (anonymous namespace)::__new_handler
0013e3a0 00000010 V std::string::_Rep::_S_empty_rep_storage
0013e3b0 00000028 B __malloc_current_mallinfo
0013e3d8 00000004 B __malloc_max_sbrked_mem
0013e3dc 00000004 B __malloc_max_total_mem
0013e3e0 00000004 B __malloc_top_pad
0013e3e4 00000004 b heap_start.7420
0013e3e8 00000004 B fake_heap_end
0013e3ec 00000004 B fake_heap_start
0013e3f0 00000400 b temp_cwd
0013e7f0 00000048 B __syscalls
0013e838 000005a0 B __C2Di_Context
0013edd8 000002d0 B __C3D_Context
0013f0a8 00000020 B C3D_IVUnif
0013f0c8 000000c0 B C3D_FVUnifDirty
0013f188 00000002 B C3D_BoolUnifsDirty
0013f18c 00000008 B C3D_IVUnifDirty
0013f194 00000004 B C3D_BoolUnifs
0013f198 00000c00 B C3D_FVUnif
0013fd98 0000004c B currentCopy
0013fde4 00000008 B gfxBottomFramebuffers
0013fdec 00000004 B gspSharedMemHandle
0013fdf0 0000001c B bottomFramebufferInfo
0013fe0c 00000004 B gspEvent
0013fe10 00000008 B gfxTopLeftFramebuffers
0013fe18 00000008 B gfxTopRightFramebuffers
0013fe20 0000001c B topFramebufferInfo
0013fe3c 00000001 B gfxThreadID
0013fe40 00000004 B gfxSharedMemory
0013fe44 00000004 B gfxTopFramebufferMaxSize
0013fe48 00000004 B gfxBottomFramebufferMaxSize
0013fe4c 00000004 B gxCmdBuf
0013fe50 00000004 B gpuCmdBuf
0013fe54 00000004 B gpuCmdBufOffset
0013fe58 00000004 B gpuCmdBufSize
0013fe5c 00000002 B ndspFrameId
0013fe5e 00000002 B ndspBufferId
0013fe60 00000080 B ndspVars
0013fee0 00000002 B ndspBufferCurId
0013fee4 00000004 B gspGpuHandle
0013fee8 00000004 B hidMemHandle
0013feec 00000004 B hidHandle
0013fef0 00000004 B hidSharedMem
0013fef4 00000014 B hidEvents
0013ff08 00000004 B __system_retAddr
0013ff0c 00000004 B __ctru_linear_heap
0013ff10 00000004 B __ctru_heap
0013ff14 00000004 B __system_argv
0013ff18 00000004 B __system_argc
0013ff1c 00000004 B irrstHandle
0013ff20 00000004 B irrstEvent
0013ff24 00000004 B irrstMemHandle
0013ff28 00000004 B irrstSharedMem
0013ff2c B __tls_start
00141338 B __bss_end__
00141338 A __end__
00141338 B __tls_end
